//=================================================================================
//--- Учебно-исследовательская программа
//--- modbus_reader
//--- Тестирование библиотеки tokio, предназначенной для работы с
//--- синхронными и асинхронными обращениями к потокам данных (в данном случае с
//--- данными, передаваемыми по каналам RS-232 в формате MODBUS-RTU)
//--- В приложении реализовано чтение данных регистров input и holding 
//=================================================================================

//--- Опрос контроллера на процессоре STM32K476 производится по каналу RS-232 
//--- с использованием протокола MODBUS-RTU
//--- Порт последовательного интерфейса в Linux: /dev/ttyACM0
//--- Адрес Slave устройства в сети Modbus 0x01 
//--- Baudrate = 19200
//---  
//--- Регистры INPUT:   [0..15] 
//--- Регистры HOLDING: [0..22]
//---------------------------------------------------------------------------------

//--- Прочитанные данные регистров распечатываются в формате
//--- Reading 16 input registers
//--- RG[ 0] == 0x[102]
//--- RG[ 1] == 0x[3E8]
//--- RG[ 2] == 0x[1]
//--- RG[ 3] == 0x[0]
//--- ...
//--- Reading 23 holding registers:
//--- RG[ 0] == 0x[102]
//--- RG[ 1] == 0x[3E8]
//--- RG[ 2] == 0x[1]
//--- RG[ 3] == 0x[0]
//--- ...
//---------------------------------------------------------------------------------

//--- Тестирование алгоритмов ведется на языке программирования rust 
//--- Для создания программы применена среда cargo и 
//--- (Visual Studio Code или RustRover)
//--- Хотя RR предполагается перевести на коммерческие рельсы, но пока можно
//--- им пользоваться безплатно
//---------------------------------------------------------------------------------

ENV:linux Mint 5.4.0-153-generic ... x86_64 GNU/Linux
    rust v1.72.0    

IDE:Cargo v1.72.0
    VSCode v1.8.01
    RustRover 2023.3 EAP
//=================================================================================
